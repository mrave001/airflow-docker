[2023-01-26 17:22:51,038] {taskinstance.py:1179} INFO - Dependencies all met for <TaskInstance: jla-psp-paymentech-load.create_staging_tables manual__2023-01-26T17:18:07.379899+00:00 [queued]>
[2023-01-26 17:22:51,091] {taskinstance.py:1179} INFO - Dependencies all met for <TaskInstance: jla-psp-paymentech-load.create_staging_tables manual__2023-01-26T17:18:07.379899+00:00 [queued]>
[2023-01-26 17:22:51,093] {taskinstance.py:1376} INFO - 
--------------------------------------------------------------------------------
[2023-01-26 17:22:51,094] {taskinstance.py:1377} INFO - Starting attempt 5 of 5
[2023-01-26 17:22:51,095] {taskinstance.py:1378} INFO - 
--------------------------------------------------------------------------------
[2023-01-26 17:22:51,169] {taskinstance.py:1397} INFO - Executing <Task(TeradataOperator): create_staging_tables> on 2023-01-26 17:18:07.379899+00:00
[2023-01-26 17:22:51,181] {standard_task_runner.py:52} INFO - Started process 4133 to run task
[2023-01-26 17:22:51,190] {standard_task_runner.py:79} INFO - Running: ['***', 'tasks', 'run', 'jla-psp-paymentech-load', 'create_staging_tables', 'manual__2023-01-26T17:18:07.379899+00:00', '--job-id', '233', '--raw', '--subdir', 'DAGS_FOLDER/jla-psp-paymentech-load.py', '--cfg-path', '/tmp/tmpp7q_z07b', '--error-file', '/tmp/tmpvj4rj52l']
[2023-01-26 17:22:51,193] {standard_task_runner.py:80} INFO - Job 233: Subtask create_staging_tables
[2023-01-26 17:22:51,562] {task_command.py:371} INFO - Running <TaskInstance: jla-psp-paymentech-load.create_staging_tables manual__2023-01-26T17:18:07.379899+00:00 [running]> on host a8cd24867728
[2023-01-26 17:22:52,171] {taskinstance.py:1591} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_EMAIL=barobinson@groupon.com
AIRFLOW_CTX_DAG_OWNER=FSA
AIRFLOW_CTX_DAG_ID=jla-psp-paymentech-load
AIRFLOW_CTX_TASK_ID=create_staging_tables
AIRFLOW_CTX_EXECUTION_DATE=2023-01-26T17:18:07.379899+00:00
AIRFLOW_CTX_TRY_NUMBER=5
AIRFLOW_CTX_DAG_RUN_ID=manual__2023-01-26T17:18:07.379899+00:00
[2023-01-26 17:22:52,176] {teradata.py:16} INFO - Executing: [["CALL sandbox.acct_jla_drop_if_exist('sandbox','i830_acct_jla_paymentech_deposits_staging') ", '\nCREATE MULTISET TABLE sandbox.i830_acct_jla_paymentech_deposits_staging, NO FALLBACK \n(\n         record_type            CHAR(8),        -- string, \n         submission_date        CHAR(10),       -- MM/DD/YYYY format, date in Eastern timezone when submission was received at Paymentech\n         pid_number             INTEGER,        -- intger, merchant\'\'s presenter ID number (constant 871889)\n         pid_short_name         VARCHAR(6),     -- string, presenter abbreviated name (constant "cyber3")\n         submission_number      VARCHAR(11),    -- a unique ID for set of records (example "20627.01F4i")\n         record_number          INTEGER,        -- sequence ID within submission_number (example 2594)\n         entity_type            CHAR(2),        -- string, constant value "TD"\n         entity_number          INTEGER,        -- integer, transaction division entity ID (example 201622)\n         presentment_currency   CHAR(3),        -- string, currency abbreviation (example "USD")\n         merchant_order_id      VARCHAR(22),    -- string, reconciliation ID (example "92544831C3DUA68X")\n         rdfi_number            INTEGER,        -- integer (empty in non-European markets)\n         account_number         VARCHAR(22),    -- string, masked credit card number (example "XXXXXXXXXXXX1234")\n         expiration_date        CHAR(5),        -- MM/YY format, credit card expiration date (example "07/26")\n         amount                 DECIMAL(13,2),  -- decimal, transaction amount (may be negative or decimal-only', ' example 12.34)\n         mop                    CHAR(2),        -- two-character payment method code (example "VI" for Visa)\n         action_code            CHAR(2),        -- two-character transaction type code (example "DP")\n         auth_date              CHAR(10),       -- MM/DD/YYYY format, date on which authorization was performed\n         auth_code              CHAR(6),        -- six-character code related to positive response from endpoint (example "535918")\n         auth_response_code     CHAR(3),        -- string, Chase Paymentech response code (example "100")\n         trace_number           INTEGER,        -- integer, non-unique debit transaction identifier (empty)\n         consumer_country_code  CHAR(12),       -- two character consumer country code, EU debit transactions only (empty)\n         reserved               CHAR(1),        -- reserved field (always empty)\n         mcc                    INTEGER,        -- merchant category code (example 7299)\n         token_ind              CHAR(1),        -- valid values 1,2,3,0. Could be blank.\n         interchange_qual_cd    CHAR(4),        -- Interchange Qualification Code (example VPDM)\n         durbin_regulated       CHAR(1),        -- Indicates whether issuing bank\'\'s card range is regulated or not as defined by durbin amendment (Y/N)\n         interchange_unit_fee   DECIMAL(5,4),   -- Interchange unit fee (+ve amt is debit and -ve amt is credit to merchant). Could be 0 or blank\n         interchange_face_prcnt DECIMAL(8,6),   -- Interchange % rate fee applied to the face value of this transaction. Could be 0 or blank\n         total_interchange_amt  DECIMAL(10,2),  -- Total interchange fee assessed by the card association. Could be 0 or blank\n         total_assess_amt       DECIMAL(10,2),  -- Total assessment fee assessed by the card association. Could be 0 or blank\n         other_debit_passthru_fee DECIMAL(10,2),  -- Fee per item identified in merchange fee schedule for each line item. Could be 0 or blank\n         filename               VARCHAR(100)\n)\nPRIMARY INDEX(record_number)', '\nCOLLECT STATS ON i830_acct_jla_paymentech_deposits_staging INDEX (record_number)', '\n\nGRANT ALL ON i830_acct_jla_paymentech_deposits_staging TO UB_AcctPost WITH GRANT OPTION', '\nGRANT ALL ON i830_acct_jla_paymentech_deposits_staging TO barobinson WITH GRANT OPTION', '\nGRANT ALL ON i830_acct_jla_paymentech_deposits_staging TO jalbrecht WITH GRANT OPTION'], ["CALL sandbox.acct_jla_drop_if_exist('sandbox','i830_acct_jla_paymentech_fees_staging')", '\nCREATE MULTISET TABLE sandbox.i830_acct_jla_paymentech_fees_staging, NO FALLBACK \n(\n        record_type VARCHAR(8),\n        category VARCHAR(6),\n        sub_category VARCHAR(6),\n        entity_type VARCHAR(2),\n        entity_number VARCHAR(10),\n        funds_transfer_instr_num VARCHAR(10),\n        secure_bank_acct_num VARCHAR(10),\n        currency VARCHAR(3),\n        fee_schedule VARCHAR(10),\n        mop VARCHAR(2),\n        interchange_qualification VARCHAR(4),\n        fee_type_description VARCHAR(30),\n        action_type CHAR(1),\n        unit_quantity INTEGER,\n        unit_fee DECIMAL(11,4),\n        amount DECIMAL(17,2),\n        rate DECIMAL(8,6),\n        total_charge DECIMAL(17,2),\n        filename VARCHAR(100)\n) \nPRIMARY INDEX(record_type)', '\nCOLLECT STATS ON i830_acct_jla_paymentech_fees_staging INDEX (sequence_number)', '\n\nGRANT ALL ON i830_acct_jla_paymentech_fees_staging TO UB_AcctPost WITH GRANT OPTION', '\nGRANT ALL ON i830_acct_jla_paymentech_fees_staging TO barobinson WITH GRANT OPTION', '\nGRANT ALL ON i830_acct_jla_paymentech_fees_staging TO jalbrecht WITH GRANT OPTION'], ["CALL sandbox.acct_jla_drop_if_exist('sandbox','i830_acct_jla_paymentech_chargebacks_staging')", '\nCREATE MULTISET TABLE sandbox.i830_acct_jla_paymentech_chargebacks_staging, NO FALLBACK \n(\n        record_type          CHAR(9) NOT NULL,\n        entity_type          CHAR(2) NOT NULL,\n        entity_number        INTEGER NOT NULL,\n        chargeback_amount    DECIMAL(13,2),\n        previous_partial     CHAR(1),\n        presentment_currency CHAR(3),\n        chargeback_category  VARCHAR(12),\n        status_flag          CHAR(1),\n        sequence_number      INTEGER,\n        merchant_order_id    VARCHAR(22),\n        account_number       VARCHAR(22),\n        reason_code          VARCHAR(12),\n        transaction_date     CHAR(10),\n        chargeback_date      CHAR(10),\n        activity_date        CHAR(10),\n        current_action       DECIMAL(13,2),\n        fee_amount           DECIMAL(13,2),\n        usage_code           SMALLINT,\n        acquirer_reference_number VARCHAR(23),\n        mop_code             CHAR(2),\n        authorization_date   CHAR(10),\n        chargeback_due_date  CHAR(10),\n        ticket_no            VARCHAR(15),\n        potential_bundled_cb  CHAR(1),\n        token_ind            CHAR(1),\n        filename             VARCHAR(100)\n        ) \nPRIMARY INDEX(sequence_number)', '\nCOLLECT STATS ON i830_acct_jla_paymentech_chargebacks_staging INDEX (sequence_number)', '\n\nGRANT ALL ON i830_acct_jla_paymentech_chargebacks_staging TO UB_AcctPost WITH GRANT OPTION', '\nGRANT ALL ON i830_acct_jla_paymentech_chargebacks_staging TO barobinson WITH GRANT OPTION', '\nGRANT ALL ON i830_acct_jla_paymentech_chargebacks_staging TO jalbrecht WITH GRANT OPTION']]
[2023-01-26 17:22:52,179] {teradata.py:18} INFO - autocommit: True
[2023-01-26 17:22:52,213] {base.py:68} INFO - Using connection ID 'teradata' for task execution.
[2023-01-26 17:22:59,026] {local_task_job.py:156} INFO - Task exited with return code Negsignal.SIGABRT
[2023-01-26 17:22:59,090] {taskinstance.py:1420} INFO - Marking task as FAILED. dag_id=jla-psp-paymentech-load, task_id=create_staging_tables, execution_date=20230126T171807, start_date=20230126T172251, end_date=20230126T172259
[2023-01-26 17:22:59,441] {warnings.py:110} WARNING - /home/***/.local/lib/python3.7/site-packages/***/utils/context.py:202: AirflowContextDeprecationWarning: Accessing 'execution_date' from the template is deprecated and will be removed in a future version. Please use 'data_interval_start' or 'logical_date' instead.
  warnings.warn(_create_deprecation_warning(key, self._deprecation_replacements[key]))

[2023-01-26 17:22:59,446] {logging_mixin.py:115} INFO - :ampelred: AIRFLOW TASK FAILURE :ampelred:

DAG:                             jla-psp-paymentech-load
TASKS:                          create_staging_tables
EXECUTION TIME:      2023-01-26T17:18:07.379899+00:00
REASON:                       None
LOG:                              http://localhost:8080/log?execution_date=2023-01-26T17%3A18%3A07.379899%2B00%3A00&task_id=create_staging_tables&dag_id=jla-psp-paymentech-load&map_index=-1
[2023-01-26 17:22:59,546] {logging_mixin.py:115} INFO - slack_connection
[2023-01-26 17:22:59,547] {logging_mixin.py:115} INFO - ***
[2023-01-26 17:22:59,549] {logging_mixin.py:115} INFO - #fsa-alerts-dev
[2023-01-26 17:22:59,573] {warnings.py:110} WARNING - /home/***/.local/lib/python3.7/site-packages/***/providers/http/operators/http.py:83: DeprecationWarning: none_failed_or_skipped Trigger Rule is deprecated. Please use `none_failed_min_one_success`.
  super().__init__(**kwargs)

[2023-01-26 17:22:59,622] {base.py:68} INFO - Using connection ID 'slack_connection' for task execution.
[2023-01-26 17:22:59,631] {http.py:129} INFO - Sending 'POST' to url: https://hooks.slack.com/services/***
[2023-01-26 17:23:00,722] {local_task_job.py:273} INFO - 0 downstream tasks scheduled from follow-on schedule check
